{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","classes","dialog","src","to","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","addMessage","Field","component","Textarea","validate","required","placeholder","entryField","btnAdd","Dialogs","dialogsElements","dialogsPage","dialogsData","map","messagesElements","messageData","isAuth","dialogs","dialogsItems","messagesWrapper","messages","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","state","auth","compose","connect","Component","RedirectComponent","this","React"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,gBAAkB,iCAAiC,SAAW,0BAA0B,WAAa,4BAA4B,OAAS,wBAAwB,WAAa,8B,oBCAlTD,EAAOC,QAAU,CAAC,OAAS,6B,oBCA3BD,EAAOC,QAAU,CAAC,QAAU,2B,wHCSbC,EARI,SAACC,GAChB,OACI,sBAAKC,UAAWC,IAAQC,OAAxB,UACI,qBAAKC,IAAI,mDACT,cAAC,IAAD,CAASC,GAAI,YAAYL,EAAMM,GAA/B,SAAoCN,EAAMO,W,kBCCvCC,EALC,SAACR,GACb,OACI,qBAAKC,UAAWC,IAAQO,QAAxB,SAAkCT,EAAMS,W,yCC6B1CC,EAAcC,YAAiB,IAkB/BC,EAAsBC,YAAU,CAACC,KAAK,wBAAhBD,EAhBL,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,qBAAKf,UAAWC,IAAQe,WAAxB,SACQ,cAACC,EAAA,EAAD,CAAOX,KAAK,iBACLY,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBa,YAAY,qBACZtB,UAAWC,IAAQsB,eAElC,8BACI,wBAAQvB,UAAWC,IAAQuB,OAA3B,0BAODC,EA5CC,SAAC1B,GACb,IAAM2B,EAAkB3B,EAAM4B,YAAYC,YAAYC,KAAI,SAAA3B,GAAM,OAAI,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAsBD,GAAIH,EAAOG,IAAtBH,EAAOG,OACzGyB,EAAmB/B,EAAM4B,YAAYI,YAAYF,KAAI,SAAArB,GAAO,OAAI,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQH,OAKtH,OAAIN,EAAMiC,OAGN,sBAAKhC,UAAWC,IAAQgC,QAAxB,UACI,qBAAKjC,UAAWC,IAAQiC,aAAxB,SACKR,IAEL,sBAAK1B,UAAWC,IAAQkC,gBAAxB,UACI,qBAAKnC,UAAWC,IAAQmC,SAAxB,SACKN,IAEL,cAACnB,EAAD,CAAqBG,SAfX,SAACuB,GACnBtC,EAAMuC,YAAYD,EAAOE,yBAGJ,cAAC,IAAD,CAAUnC,GAAI,Y,+CCZrCoC,EAA6B,SAACC,GAAD,MAAY,CAC3CT,OAAOS,EAAMC,KAAKV,S,QCQPW,sBAAQC,aANC,SAACH,GACrB,MAAM,CACFd,YAAac,EAAMd,eAIoB,CAC1CW,mBDN2B,SAACO,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKhD,MAAMiC,OACR,cAACa,EAAD,eAAeE,KAAKhD,QADG,cAAC,IAAD,CAAUK,GAAI,eAHT,GACX4C,IAAMH,WAQtC,OADmCD,YAAQJ,EAARI,CAAoCE,KCH5DH,CAEOlB","file":"static/js/3.631377fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1hpnX\",\"dialogsItems\":\"Dialogs_dialogsItems__219JK\",\"active\":\"Dialogs_active__1C78-\",\"messagesWrapper\":\"Dialogs_messagesWrapper__wgLKP\",\"messages\":\"Dialogs_messages__1UWCD\",\"entryField\":\"Dialogs_entryField__c0fM4\",\"btnAdd\":\"Dialogs_btnAdd__13Nvf\",\"addMessage\":\"Dialogs_addMessage__218hV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"DialogItem_dialog__36v3M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2u8XC\"};","import classes from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nconst DialogItem = (props) => {\r\n    return(\r\n        <div className={classes.dialog}>\r\n            <img src=\"https://mdbcdn.b-cdn.net/img/new/avatars/2.jpg\"/>\r\n            <NavLink to={\"/dialogs/\"+props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import classes from './Message.module.css';\r\n\r\nconst Message = (props) => {\r\n    return(\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\nexport default Message;","import classes from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst Dialogs = (props) => {\r\n    const dialogsElements = props.dialogsPage.dialogsData.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>)\r\n    const messagesElements = props.dialogsPage.messageData.map(message => <Message message={message.message} key={message.id}/>)\r\n    const addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if(!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messagesWrapper}>\r\n                <div className={classes.messages}>\r\n                    {messagesElements}\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={classes.addMessage}>\r\n                    <Field name='newMessageBody'\r\n                           component={Textarea}\r\n                           validate={[required, maxLength50]}\r\n                           placeholder='Enter your message'\r\n                           className={classes.entryField}/>\r\n            </div>\r\n            <div>\r\n                <button className={classes.btnAdd}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst AddMessageFormRedux = reduxForm({form:'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth:state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n    return ConnectAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps,{\r\n     sendMessage}),\r\n    withAuthRedirect)(Dialogs);"],"sourceRoot":""}